= render 'shared/googleapi'

- categories = Category.send(current_user.gender)
- content_for :extra_script do
  :javascript
    $(document).ready(function() {
      window.siloette.serviceForm = new ServiceForm({
        categories: #{raw categories.to_json},
        commissionFee: #{Setting.commission_from_seller}
      });
    });

= simple_form_for [:performer, @service], html: { class: 'form-horizontal service-form', data: { id: @service.id, 'parsley-validate' => true } } do |f|
  = f.input :category_id, as: :select, collection: categories, required: true, prompt: t('simple_form.placeholders.service.category_id'), hint: raw("<div id='category-hint' class='text-muted' style='display: none;'>#{fa_icon 'info-circle'} <span></span></div>")
  = f.input :invitee_ids, as: :select, collection: dancers_collection, selected: (f.object.invitee_ids << current_user.id), input_html: { multiple: true, class: 'select2' }
  = f.input :images_count, label: t('common.images'), input_html: { value: @service.images.count, data: { 'parsley-min' => 4, 'parsley-min-message' => t('activerecord.errors.models.services.attributes.images_count.min') }, class: 'hidden-virtural' }
  #service-images.uploader-container
    = f.fields_for :images do |image|
      = render 'image_fields', f: image
    .upload-image-placeholder.links
      = link_to_add_association f, :images do
        .fileupload-text= t('common.add_more')

  = f.fields_for :video do |v|
    = v.label :link, t('simple_form.labels.video.link'), class: 'control-label'
    - if (video = v.object).link.present?
      .embed-container
        = youtube_embed(video.link) if video.youtube?
        = vimeo_embed(video.link) if video.vimeo?
    = v.input :link, label: false, required: false, input_html: { 'data-parsley-type' => :url }

  .row
    .col-sm-6
      .form-group.with-not-editable
        = f.label :price, "* #{t('simple_form.labels.service.price')}", class: 'control-label'
        .row
          = f.input :price, label: false, input_html: { data: { 'parsley-type' => :number, 'parsley-min' => 10, 'parsley-max' => 2000 } }, wrapper_html: { class: 'col-xs-10' }, hint: raw("<div id='price-hint' class='text-muted' style='display: none;'>#{fa_icon 'info-circle'} <span>#{t('common.commission_fee').html_safe}</span></div>")
          .col-xs-2.no-pad
            .price-unit
              = t('common.per_hour')
          .col-sm-12.price-description

    .col-sm-6.location-fields
      = f.input :location_id, as: :select, collection: Location.active.map { |x| [x.address, x.id] }, required: true, prompt: t('common.select')
  = f.input :description, input_html: { rows: 5, 'data-parsley-maxlength' => 250 }
  = f.input :status, as: :radio_buttons, collection: Service.statuses.keys.map { |x| [t("activerecord.attributes.service.statuses.#{x}"), x] }, wrapper: :multi_select

  .actions.text-center
    = f.button :button, t('.save'), class: 'btn btn-primary btn-bordered'
