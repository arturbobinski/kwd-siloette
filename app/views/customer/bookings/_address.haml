= render 'shared/twilio_account'

.row
  = f.input :email, required: true, input_html: { value: f.object.email || current_user.email, data: { 'parsley-type' => :email } }, wrapper_html: { class: 'col-sm-6' }
  = f.fields_for :address do |a|
    = a.input :phone, input_html: { data: { 'parsley-maxlength' => 20, 'parsley-pattern' => parsley_pattern(:phonenumber), 'parsley-remote' => '', 'parsley-remote-validator' => 'twilio' } }, wrapper_html: { class: 'col-sm-6' }

= f.fields_for :address do |a|
  - address = a.object
  - has_states = !address.country.states.empty?

  .row
    = a.input :first_name, input_html: { value: a.object.first_name || current_user.first_name, 'data-parsley-maxlength' => 50 }, wrapper_html: { class: 'col-sm-6' }
    = a.input :last_name, input_html: { value: a.object.last_name || current_user.last_name, 'data-parsley-maxlength' => 50 }, wrapper_html: { class: 'col-sm-6' }
  .row
    = a.input :address1, input_html: { 'data-parsley-maxlength' => 255 }, wrapper_html: { class: 'col-sm-6' }
    = a.input :address2, input_html: { 'data-parsley-maxlength' => 255 }, wrapper_html: { class: 'col-sm-6' }
  .row
    = a.input :city, input_html: { 'data-parsley-maxlength' => 255 }, wrapper_html: { class: 'col-sm-6' }
    = a.input :country_id, as: :select, collection: country_options, required: true, wrapper_html: { class: 'col-sm-6' }
  .row
    = a.input :state_id, as: :select, collection: address.country.states, required: has_states, input_html: {  disabled: !has_states }, wrapper_html: { class: "col-sm-6 #{'hidden' unless has_states}" }
    = a.input :state_name, required: !has_states, input_html: { 'data-parsley-maxlength' => 255, disabled: has_states }, wrapper_html: { class: "col-sm-6 #{'hidden' if has_states}" }
    = a.input :zipcode, input_html: { data: { 'parsley-maxlength' => 10, 'parsley-pattern' => parsley_pattern(:zipcode) } }, wrapper_html: { class: 'col-sm-6' }